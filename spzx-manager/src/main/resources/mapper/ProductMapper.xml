<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace = 接口的全限定符 -->
<mapper namespace="com.atguigu.spzx.manager.mapper.ProductMapper">

    <sql id="columns">
        id,name,brand_id,category1_id,category2_id,category3_id,unit_name,
        slider_urls,spec_value,status,audit_status,audit_message,
        create_time,update_time,is_deleted
    </sql>
    <insert id="saveProduct" useGeneratedKeys="true" keyProperty="id">
        insert into product (id, name, brand_id, category1_id, category2_id, category3_id, unit_name,
                             slider_urls, spec_value, status, audit_status, audit_message,
                             create_time, update_time, is_deleted)
        values (#{id},
                #{name},
                #{brandId},
                #{category1Id},
                #{category2Id},
                #{category3Id},
                #{unitName},
                #{sliderUrls},
                #{specValue},
                #{status},
                #{auditStatus},
                #{auditMessage},
                now(),
                now(),
                0)
    </insert>
    <insert id="saveDeatilsImageUrls">
        insert into product_details
        (id, product_id, image_urls, create_time, update_time, is_deleted)
        values (#{id},#{productId},#{imageUrls},now(),now(),0)
    </insert>
    <insert id="saveSku">
        insert into product_sku
        (id, sku_code, sku_name, product_id, thumb_img, sale_price, market_price, cost_price, stock_num, sale_num,
         sku_spec, weight, volume, status, create_time, update_time, is_deleted)
        values (#{id},
                #{skuCode},
                #{skuName},
                #{productId},
                #{thumbImg},
                #{salePrice},
                #{marketPrice},
                #{costPrice},
                #{stockNum},
                #{skuSpec},
                #{weight},
                #{volume},
                #{status},
                #{saleNum},
                now(),
                now(),
                0)
    </insert>
    <update id="updateById">
        update product set
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="brandId != null and brandId != ''">
            brand_id = #{brandId},
        </if>
        <if test="category1Id != null and category1Id != ''">
            category1_id = #{category1Id},
        </if>
        <if test="category2Id != null and category2Id != ''">
            category2_id = #{category2Id},
        </if>
        <if test="category3Id != null and category3Id != ''">
            category3_id = #{category3Id},
        </if>
        <if test="unitName != null and unitName != ''">
            unit_name = #{unitName},
        </if>
        <if test="sliderUrls != null and sliderUrls != ''">
            slider_urls = #{sliderUrls},
        </if>
        <if test="specValue != null and specValue != ''">
            spec_value = #{specValue},
        </if>
        <if test="status != null and status != ''">
            status = #{status},
        </if>
        <if test="auditStatus != null and auditStatus != ''">
            audit_status = #{auditStatus},
        </if>
        <if test="auditMessage != null and auditMessage != ''">
            audit_message = #{auditMessage},
        </if>
        update_time = now()
        where
        id = #{id}
    </update>
    <update id="updateSkuById">
        update product_sku set
        <if test="skuCode != null and skuCode != ''">
            sku_code = #{skuCode},
        </if>
        <if test="skuName != null and skuName != ''">
            sku_name = #{skuName},
        </if>
        <if test="productId != null and productId != ''">
            product_id = #{productId},
        </if>
        <if test="thumbImg != null and thumbImg != ''">
            thumb_img = #{thumbImg},
        </if>
        <if test="salePrice != null and salePrice != ''">
            sale_price = #{salePrice},
        </if>
        <if test="marketPrice != null and marketPrice != ''">
            market_price = #{marketPrice},
        </if>
        <if test="costPrice != null and costPrice != ''">
            cost_price = #{costPrice},
        </if>
        <if test="stockNum != null and stockNum != ''">
            stock_num = #{stockNum},
        </if>
        <if test="skuSpec != null and skuSpec != ''">
            sku_spec = #{skuSpec},
        </if>
        <if test="weight != null and weight != ''">
            weight = #{weight},
        </if>
        <if test="volume != null and volume != ''">
            volume = #{volume},
        </if>
        <if test="status != null and status != ''">
            status = #{status},
        </if>
        update_time = now()
        where
        id = #{id}
    </update>
    <update id="updateDetailsById">
        update product_details set
        <if test="productId != null and productId != ''">
            product_id = #{productId},
        </if>
        <if test="imageUrls != null and imageUrls != ''">
            image_urls = #{imageUrls},
        </if>
        update_time =  now()
        where
        id = #{id}
    </update>
    <select id="findByPage" resultType="com.atguigu.spzx.model.entity.product.Product">
        select p.id,p.name,p.brand_id,p.category1_id,p.category2_id,p.category3_id,p.unit_name,
               p.slider_urls,p.spec_value,p.status,p.audit_status,p.audit_message,
               b.name as brandName,c1.name as category1Name, c2.name as category2Name,c3.name as category3Name
        from product as p
        inner join brand as b on b.id = p.brand_id
        inner join category c1 on c1.id = p.category1_id
        inner join category c2 on c2.id = p.category2_id
        inner join category c3 on c3.id = p.category3_id
        <where>
            <if test="brandId != null and brandId != ''">
                and p.brand_id = #{brandId}
            </if>
            <if test="category1Id != null and category1Id != ''">
                and p.category1_id = #{category1Id}
            </if>
            <if test="category2Id != null and category2Id != ''">
                and p.category2_id = #{category2Id}
            </if>
            <if test="category3Id != null and category3Id != ''">
                and p.category3_id = #{category3Id}
            </if>
            and p.is_deleted = 0
        </where>
        order by p.id desc
    </select>
    <select id="findAllUnit" resultType="com.atguigu.spzx.model.entity.base.ProductUnit">
        select * from product_unit
        where is_deleted = 0
        order by id
    </select>
    <select id="getById" resultType="com.atguigu.spzx.model.entity.product.Product">
        select p.id,p.name,p.brand_id,p.category1_id,p.category2_id,p.category3_id,p.unit_name,
               p.slider_urls,p.spec_value,p.status,p.audit_status,p.audit_message,
               b.name as brandName,c1.name as category1Name, c2.name as category2Name,c3.name as category3Name
        from product as p
                 inner join brand as b on b.id = p.brand_id
                 inner join category c1 on c1.id = p.category1_id
                 inner join category c2 on c2.id = p.category2_id
                 inner join category c3 on c3.id = p.category3_id
        where p.id = #{id} and p.is_deleted = 0
    </select>
    <select id="getSkuById" resultType="com.atguigu.spzx.model.entity.product.ProductSku">
        select * from product_sku
        where product_id = #{id} and is_deleted = 0
        order by id desc
    </select>
    <select id="getDetailsById" resultType="com.atguigu.spzx.model.entity.product.ProductDetails">
        select * from product_details
        where product_id = #{id} and is_deleted = 0
    </select>

    <update id="deleteById">
        update product set is_deleted = 1,update_time = now()
        where id = #{id}
    </update>
    <update id="deleteSkuById">
        update product_sku set is_deleted = 1,update_time = now()
        where product_id = #{id}
    </update>
    <update id="deleteDetailsById">
        update product_details set is_deleted = 1,update_time = now()
        where product_id = #{id}
    </update>
</mapper>